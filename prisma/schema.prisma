// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int           @id @default(autoincrement())
  name      String
  email     String        @unique
  password  String
  role      UserRole
  projects  UserProject[]
  tasks     Task[]
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
}

enum UserRole {
  ADMIN
  EMPLOYEE
}

model Project {
  id          Int           @id @default(autoincrement())
  title       String
  description String
  status      ProjectStatus @default(IN_PROGRESS)
  users       UserProject[]
  tasks       Task[]
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  finishedAt  DateTime?
}

enum ProjectStatus {
  IN_PROGRESS
  COMPLETED
  FREEZED
}

model UserProject {
  userId    Int
  projectId Int
  user      User     @relation(fields: [userId], references: [id])
  project   Project  @relation(fields: [projectId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([userId, projectId])
}

model Task {
  id          Int        @id @default(autoincrement())
  title       String
  description String
  status      TaskStatus @default(IN_PROGRESS)
  userId      Int
  projectId   Int

  user      User     @relation(fields: [userId], references: [id])
  project   Project  @relation(fields: [projectId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum TaskStatus {
  TO_DO
  IN_PROGRESS
  COMPLETED
}
